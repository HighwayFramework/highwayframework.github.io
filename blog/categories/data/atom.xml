<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: data | The fastest and smoothest way to good architecture]]></title>
  <link href="http://hwyfwk.com/blog/categories/data/atom.xml" rel="self"/>
  <link href="http://hwyfwk.com/"/>
  <updated>2014-04-28T22:42:13-05:00</updated>
  <id>http://hwyfwk.com/</id>
  <author>
    <name><![CDATA[Tim Rayburn & Devlin Liles]]></name>
    <email><![CDATA[Team@HwyFwk.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Highway.Data v5.1.0 Released]]></title>
    <link href="http://hwyfwk.com/blog/2014/04/28/highway-dot-data-v5-dot-1-0-released/"/>
    <updated>2014-04-28T22:37:00-05:00</updated>
    <id>http://hwyfwk.com/blog/2014/04/28/highway-dot-data-v5-dot-1-0-released</id>
    <content type="html"><![CDATA[<ul>
<li><code>DomainRepositoryFactory</code> doesn’t throw on null event collection – Eric Burcham</li>
<li>Added <code>InMemoryActiveDataContext</code> to allow for multiple repositories using a single in memory – The beginnings of a “prod” in memory context – Long Mai</li>
<li>Queued Add and Remove – <code>InMemoryDataContext</code> now acts more like a real database as it doesn’t return added records or modify collections in loops. – Long Mai</li>
<li>Identity Strategies are invoked automatically on commit – Long Mai</li>
<li>Brought back .NET 4.0 support</li>
<li>Updated to Entity Framework 6.0.2</li>
<li>Updated to CommonServiceLocator 1.2</li>
<li>Updated to Common.Logging 2.2.0</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Highway.Data v5.0.7 Released]]></title>
    <link href="http://hwyfwk.com/blog/2014/03/22/highway-dot-data-v5-dot-0-7-released/"/>
    <updated>2014-03-22T10:47:00-05:00</updated>
    <id>http://hwyfwk.com/blog/2014/03/22/highway-dot-data-v5-dot-0-7-released</id>
    <content type="html"><![CDATA[<p>More contributions from, Eric Burcham and Long Mai!  Thank you gentlemen for your support.</p>

<ul>
<li>Bug Fix : <a href="https://github.com/HighwayFramework/Highway.Data/pull/56">GetById Documentation</a></li>
<li>Bug Fix : <a href="https://github.com/HighwayFramework/Highway.Data/pull/55">Additional Identity Strategies and Auto-increment Id for IIdentifiable&rsquo;s</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Highway.Data v5.0.6 Released]]></title>
    <link href="http://hwyfwk.com/blog/2014/03/15/highway-dot-data-v5-dot-0-6-released/"/>
    <updated>2014-03-15T10:47:00-05:00</updated>
    <id>http://hwyfwk.com/blog/2014/03/15/highway-dot-data-v5-dot-0-6-released</id>
    <content type="html"><![CDATA[<p>More contributions from @longility in this release, and an incubating feature, which will be promoted to a full feature in a future release:</p>

<ul>
<li>Bug Fix : <a href="https://github.com/HighwayFramework/Highway.Data/pull/54">Support for bidirectional and circular entity references for InMemoryDataContext</a></li>
<li>Incubating Feature : <a href="https://github.com/HighwayFramework/Highway.Data/pull/53">New SQL Query objects for EF</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Highway.Data v5.0.5 Released]]></title>
    <link href="http://hwyfwk.com/blog/2014/03/10/highway-dot-data-v5-dot-0-5-released/"/>
    <updated>2014-03-10T10:47:00-05:00</updated>
    <id>http://hwyfwk.com/blog/2014/03/10/highway-dot-data-v5-dot-0-5-released</id>
    <content type="html"><![CDATA[<p>This release is brought to you by two new contributors, Eric Burcham and Long Mai!  Thank you gentlemen for your support.</p>

<ul>
<li>Bug Fix : <a href="https://github.com/HighwayFramework/Highway.Data/pull/52">Support adding element directly and indirectly to InMemoryDataContext.</a></li>
<li>Bug Fix : <a href="https://github.com/HighwayFramework/Highway.Data/pull/51">Improved documentation for IDomainRepositoryFactory</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simplified Creation Patterns]]></title>
    <link href="http://hwyfwk.com/blog/2014/01/25/simplified-creation-patterns/"/>
    <updated>2014-01-25T16:45:00-06:00</updated>
    <id>http://hwyfwk.com/blog/2014/01/25/simplified-creation-patterns</id>
    <content type="html"><![CDATA[<h1>Simplified Creation Patterns</h1>

<h3>Repository Factory</h3>

<p>We wanted to provide a simple way to construct both domain repositories and simple Repositories. This lead us to create two different factories for repository. We ship a default factory for both of these, but we also ship interfaces for these as a test and extension point.</p>

<h4>Repository Factory</h4>

<p>This allows you to construct a simple repository that doesn&rsquo;t need any of the <code>DomainRepository</code> features.</p>

<p>```</p>

<pre><code>public interface IRepositoryFactory
{
    /// &lt;summary&gt;
    /// Creates a repository for the requested domain
    /// &lt;/summary&gt;
    /// &lt;returns&gt;Domain specific repository&lt;/returns&gt;
    IRepository Create();
}
</code></pre>

<p>```</p>

<h4>Domain Repository Factory</h4>

<p>This allows you construct a repository specific to any domain that the factory is dependent on.</p>

<p>```</p>

<pre><code>public interface IDomainRepositoryFactory
{

    /// &lt;summary&gt;
    /// Creates a repository for the specified &lt;see cref="IDomain"/&gt;
    /// &lt;/summary&gt;
    /// &lt;typeparam name="T"&gt;Domain for repository&lt;/typeparam&gt;
    /// &lt;returns&gt;&lt;see cref="IRepository"/&gt;&lt;/returns&gt;
    IRepository Create&lt;T&gt;() where T : class, IDomain;

    /// &lt;summary&gt;
    /// Creates a repository for the specified &lt;see cref="IDomain"/&gt;
    /// &lt;/summary&gt;
    /// &lt;param name="T"&gt;Domain for repository&lt;/param&gt;
    /// &lt;returns&gt;&lt;see cref="IRepository"/&gt;&lt;/returns&gt;
    IRepository Create(Type type);
}
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
</feed>
